---
import { getStaticPaths } from "../pages/blog/[...slug].astro";

const data = await getStaticPaths();
---

<script define:vars={{ data }} is:inline>
  document.addEventListener("astro:page-load", () => {
    const input = document.querySelector("input");
    const searchBox = document.querySelector(".searchbox");
    const modal = document.querySelector(".modal");
    let searchString = "";
    document.addEventListener("keypress", (e) => {
      if (e.key.length == 1) {
        modal.classList.remove("hidden", "grow-back");
        modal.classList.add("block", "grow-forward");
        input.focus();
      }
    });
    input.addEventListener("input", (e) => {
      searchString = e.target.value.replace(/\s+/g, "-");
      const matches = runSearch();
      populate(matches);
    });

    function runSearch() {
      const slugData = data.map((post) => ({
        slug: post.params.slug,
        title: post.props.data.title,
        tags: post.props.data.tags.map((tag) => tag.toLowerCase()),
      }));
      return slugData.filter(
        (post) =>
          post.slug.includes(searchString.toLowerCase()) ||
          post.tags.includes(searchString.toLowerCase())
      );
    }

    function populate(matches) {
      searchBox.innerHTML = "";
      const htmlArray = matches.map((post) => {
        return `<div class="my-1">
                    <a href="/blog/${post.slug}" class="hover:text-white">${post.title}</a>
                </div>`;
      });
      for (let div of htmlArray) {
        searchBox.innerHTML += div;
      }
    }

    document.addEventListener("click", (e) => {
      if (!modal.contains(e.target)) {
        searchString = "";
        input.value = "";
        modal.classList.remove("block", "grow-forward");
        modal.classList.add("grow-back");
        setTimeout(() => {
          modal.classList.add("hidden");
        }, 400);
      }
    });
  });
</script>

<div
  class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-slate-900 modal hidden h-1/2 w-1/3 p-7 rounded-md border border-white"
>
  <input
    type="text"
    class="w-full p-1 text-[1.2rem] border border-black"
    placeholder="search by title or category"
  />
  <div class="searchbox my-3 h-5/6 overflow-y-auto"></div>
</div>

<style>
  @keyframes grow-forward {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
  }

  @keyframes grow-back {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }
  }

  .grow-forward {
    animation: grow-forward 0.4s ease forwards;
  }

  .grow-back {
    animation: grow-back 0.4s ease forwards;
  }
</style>
